'''
import libraries
'''
from mpi4py import MPI
import json
import sys


def get_FileName(argv):
    if len(argv) > 1:
        return argv[1]
    else:
        return "bigTwitter.json"


# load the grid data, specifically the coordinates of vetices
# of each grid box
def get_Grid(gridFile):
    with open(gridFile, 'r') as melbGrid:
        gridData = json.load(melbGrid)
        grid = []
        for box in gridData["features"]:
            grid.append(box["properties"])
    return grid


# count the total number of data records in a json lines file
def count_lines(tweet_file):
    count = 0
    with open(tweet_file, 'r') as data_file:
        for line in data_file:
            count += 1
    return count

def master_process():
    pass


def slave_process():
    pass


def which_grid_box(cor_x, cor_y, grid):
    for box in grid:
        if cor_x >= box["xmin"] and cor_x <= box["xmax"] \
         and cor_y >= box["ymin"] and cor_y <= box["ymin"]:
            area = box["id"]
    return area


def main(argv):
    comm = MPI.COMM_WORLD
    # Get rank of process
    rank = comm.Get_rank()
    processes = comm.Get_size()
    grid = get_Grid(argv[0])  # suppose argv == "melbGrid.json"
    if rank == 0:
        # Master
        master_process(comm=comm, argv=argv)
    else:
        # slave
        slave_process(comm = comm, argv = argv)


# main program
if __name__ == "__main__":
    main(sys.argv)
